(function(b) {
    b(function() {
        b.widget("blk.hpaging", {
            options: {
                limit: 5,
                activePage: 1,
                parentID: "",
                navBar: null,
                totalPages: ""
            },
            _create: function() {
                var a = this._getNavBar();
                b(this.element).before(a)
            },
            _getNavBar: function() {
                var a;
                a = b(this.element).prop("id");
                this.options.parentID = a;
                a = b("<div id=pg_" + a + ">").addClass("pagination").data("parentID", a);
                this.options.navBar = a;
                this.setPages(this.options.activePage);
                return a
            },
            clearPages: function() {
                b(this.options.navBar).empty();
                b("#" + this.options.parentID + " > tbody > tr").show();
                b("#" + this.options.parentID + " > tbody > tr").removeData("page");
                return !0
            },
            newRow: function(a) {
                this.setPages();
                var c = b("#" + this.options.parentID + " > tbody > tr");
                a = b(c).eq(a).data("page");
                this.activePage(a)
            },
            newLimit: function(a) {
                this.options.limit = a;
                this.setPages() && this.activePage(1)
            },
            setPages: function(a) {
                var c = !1;
                if (this.clearPages()) {
                    var c = this.options.limit,
                        h = b("#" + this.options.parentID + " > tbody > tr"),
                        f, d = h.length / c;
                    f = d;
                    d = d.toString().split(".");
                    2 == d.length && (f = parseInt(d[0]) + 1);
                    0 == f && (f = 1);
                    d =
                        this.options.parentID;
                    this._setPage(d, 1, "<<");
                    this._setPage(d, "P-1", "<");
                    for (var g = 0, k = c, e, l = 1; l <= f; l++) g = h.slice(g, k), e = l, b(g).removeData("page"), b(g).data("page", e), this._setPage(d, e, e), g = k, k = parseInt(k) + parseInt(c);
                    this._setPage(d, "P+1", ">");
                    this._setPage(d, e, ">>");
                    this.options.totalPages = e;
                    void 0 !== a && this.activePage(a);
                    c = !0
                }
                return c
            },
            _setPage: function(a, c, h) {
                a = b("<a>", {
                    href: "#",
                    text: h,
                    "data-page": c
                }).appendTo(this.options.navBar);
                this._on(a, {
                    click: "onPageClick"
                })
            },
            activePage: function(a) {
                var c =
                    1 * a;
                this.options.activePage = c;
                b("#" + this.options.parentID + " > tbody > tr").each(function() {
                    b(this).data("page") == c ? b(this).show() : b(this).hide()
                });
                this._selectActivePage()
            },
            _selectActivePage: function() {
                var a = this.options.activePage;
                b(this.options.navBar).find("a").each(function() {
                    var c = b(this).text();
                    b(this).data("page") == a && "<<" != c && ">>" != c && (b(this).attr("class", "active"), b(this).siblings().attr("class", ""))
                })
            },
            onPageClick: function(a) {
                a.preventDefault();
                a = b(a.target).data("page");
                "P-1" == a ? (a = this.options.activePage -
                    1, 1 > a && (a = 1)) : "P+1" == a && (a = this.options.activePage + 1, a > this.options.totalPages && (a = this.options.totalPages));
                this.activePage(a)
            }
        })
    })
})(jQuery);

$(document).ready(function () {
			$("#dis_text").click(function(){
			
			if (document.getElementById("dis_text").checked == true){
				document.getElementById("text").style.display = 'block';
			} else {
				document.getElementById("text").style.display = 'none';
			}
			});
			$("#dis_text1").click(function(){
			
			if (document.getElementById("dis_text1").checked == true){
				document.getElementById("text1").style.display = 'block';
			} else {
				document.getElementById("text1").style.display = 'none';
			}
			});
			$("#dis_text2").click(function(){
			
			if (document.getElementById("dis_text2").checked == true){
				document.getElementById("text2").style.display = 'block';
			} else {
				document.getElementById("text2").style.display = 'none';
			}
			});
			$("#dis_text3").click(function(){
			
			if (document.getElementById("dis_text3").checked == true){
				document.getElementById("text3").style.display = 'block';
			} else {
				document.getElementById("text3").style.display = 'none';
			}
			});
			$("#dis_text4").click(function(){
			
			if (document.getElementById("dis_text4").checked == true){
				document.getElementById("text4").style.display = 'block';
			} else {
				document.getElementById("text4").style.display = 'none';
			}
			
			});
			
			$("#dis_text5").click(function(){
			
			if (document.getElementById("dis_text5").checked == true){
				document.getElementById("text5").style.display = 'block';
			} else {
				document.getElementById("text5").style.display = 'none';
			}
			});
			$("#dis_text6").click(function(){
			
			if (document.getElementById("dis_text6").checked == true){
				document.getElementById("text6").style.display = 'block';
			} else {
				document.getElementById("text6").style.display = 'none';
			}
			});
			$("#dis_text7").click(function(){
			
			if (document.getElementById("dis_text7").checked == true){
				document.getElementById("text7").style.display = 'block';
			} else {
				document.getElementById("text7").style.display = 'none';
			}
			});
			$("#dis_text8").click(function(){
			
			if (document.getElementById("dis_text8").checked == true){
				document.getElementById("text8").style.display = 'block';
			} else {
				document.getElementById("text8").style.display = 'none';
			}
			});
			$("#dis_text9").click(function(){
			
			if (document.getElementById("dis_text9").checked == true){
				document.getElementById("text9").style.display = 'block';
			} else {
				document.getElementById("text9").style.display = 'none';
			}
			
			});
			
			$("#dis_text10").click(function(){
			
			if (document.getElementById("dis_text10").checked == true){
				document.getElementById("text10").style.display = 'block';
			} else {
				document.getElementById("text10").style.display = 'none';
			}
			});
			
			$("#dis_text11").click(function(){
			
			if (document.getElementById("dis_text11").checked == true){
				document.getElementById("text11").style.display = 'block';
			} else {
				document.getElementById("text11").style.display = 'none';
			}
			});
			$("#dis_text12").click(function(){
			
			if (document.getElementById("dis_text12").checked == true){
				document.getElementById("text12").style.display = 'block';
			} else {
				document.getElementById("text12").style.display = 'none';
			}
			});
			
			$("#dis_text13").click(function(){
			
			if (document.getElementById("dis_text13").checked == true){
				document.getElementById("text13").style.display = 'block';
			} else {
				document.getElementById("text13").style.display = 'none';
			}
			});
			
			
			$("#dis_text14").click(function(){
			
			if (document.getElementById("dis_text14").checked == true){
				document.getElementById("text14").style.display = 'block';
			} else {
				document.getElementById("text14").style.display = 'none';
			}
			});
			});